" ThatNerd's vimrc 3.0

" INITIAL SETTINGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" {{{1
let g:python3_host_prog="/opt/homebrew/bin/python3"

" vim-plug auto install
" ~~~~~~~~~~~~~~~~~~~~~{{{2
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
    silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
" }}}2
" }}}1


" VIM-PLUG INIT ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" {{{
call plug#begin()
Plug 'kana/vim-smartinput'
Plug 'tpope/vim-commentary'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'tpope/vim-dispatch'
Plug 'dhruvasagar/vim-markify'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prabirshrestha/vim-lsp'
if has('nvim')
    Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
endif
call plug#end()
" }}}


" PLUGIN CONFIG ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" {{{1

" vim-markify config
" ~~~~~~~~~~~~~~~~~~{{{2
let g:markify_autocmd = 1
let g:markify_error_text = '██'
let g:markify_info_text = '██'
" }}}2

" fzf.vim config
" ~~~~~~~~~~~~~~{{{2
let g:fzf_buffers_jump = 1
nnoremap <C-p> :Buffers<CR>
nnoremap <C-o> :Files<CR>
nnoremap <C-f> :Rg<CR>
nnoremap <leader>df :Files ~/dotfiles<CR>
nnoremap <silent> eh :BLines ^#<CR>
" mistyping :w brings up fzf's :Windows
command -nargs=0 W echoerr "Not an editor cmd: W"
" }}}2

" Netrw config
" ~~~~~~~~~~~~{{{2
let g:netrw_liststyle = 3
let g:netrw_banner = 0
nnoremap <leader>e :Explore<CR>
" }}}2
" }}}1


" COLOURSCHEME + VISUALS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" {{{1
set termguicolors
set background=light
colorscheme rosepine_dawn
"other themes i find nice for dark mode
"set background=dark
"colorscheme wildcharm
"colorscheme elflord

" Cursor customization
" ~~~~~~~~~~~~~~~~~~~~{{{2
" Vertical bar in insert mode
let &t_SI = "\<Esc>[6 q"
" Underline in replace mode
let &t_SR = "\<Esc>[4 q"
" Block in other modes
let &t_EI = "\<Esc>[2 q"
" }}}2
" }}}1


" OPTIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" {{{1

" general options
" ~~~~~~~~~~~~~~~{{{2
set ignorecase " make search non-case-sensitive
set grepprg=rg\ --vimgrep\ --no-heading\ --smart-case
set completeopt=menu,menuone,popup,noinsert
set wildoptions=pum
let g:rmd_dynamic_comments = 0
let g:matchparen_timeout = 20
" }}}2

" UI options
" ~~~~~~~~~~~~~~~{{{2
set number relativenumber " relative-number line numbers
set cursorline
set cursorcolumn " get a sense of where your cursor is without indentline
set splitright " new splits open to right/down - more intuitive
set splitbelow
set signcolumn=yes " always show signcolumn to prevent flickering
set list " show tabchars
set listchars=tab:>\ ,trail:•,nbsp:+
set noshowmode
" }}}2

" indentation options
" ~~~~~~~~~~~~~~~{{{2
set tabstop=4 " show tab character as 4 spaces wide
set shiftwidth=0 " follow tabstop
set expandtab " insert spaces on <Tab>
set foldmethod=indent
set breakindent " when hard-wrapping lines, continue at same visual indent
set autoindent " when start a new line, use same indent as previous line
set linebreak " soft-wrap lines at whitespace
" }}}2
" }}}1


" MAPPINGS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" {{{1

" general mappings
" ~~~~~~~~~~~~~~~~{{{2
nnoremap k gk
nnoremap j gj
nnoremap gk k
nnoremap gj j
" rebind the previous jump binding bc i use it for fzf
nnoremap <C-u> <C-o>
" maximize the current window
nnoremap <leader>f <C-W>\| <C-W>_
nnoremap cc :nohlsearch \| echo "Search cleared!"<CR>
if !has('nvim')
    augroup TerminalMaps
        autocmd!
        autocmd TerminalOpen * tnoremap <buffer> <Esc> <c-\><c-n>
    augroup END
endif
" }}}2

" editing mappings
" ~~~~~~~~~~~~~~~~{{{2
" repeat prev. substitution on current line
nnoremap <leader>s :%&<CR>
" repeat prev. substitution on whole file
nnoremap <leader>ss :&&<CR>
nnoremap <silent> <A-Up> :m-2<CR>
nnoremap <silent> <A-Down> :m+1<CR>
" }}}2

" buffer + tab management mappings
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{{{2
nnoremap ]] :bnext<CR>
nnoremap [[ :bprevious<CR>
nnoremap <silent> '' :enew<CR>
nnoremap <silent> qq :bprevious \| bdelete #<CR>
nnoremap <leader>[ gT
nnoremap <leader>] gt
noremap <leader><leader> :tabnew<CR>
" open a terminal tab
nnoremap <leader>t :silent tabnew \| terminal<CR>
" }}}2

" quickfix + completion mappings
" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~{{{2
inoremap <expr> <Tab> pumvisible() ? "\<C-y>" : "\<Tab>"
nnoremap qf :cwindow<CR>
nnoremap <C-k> :cprevious<CR>
nnoremap <C-j> :cnext<CR>
nnoremap <CR><CR> :cc<CR>
nnoremap qr :lwindow<CR>
nnoremap ˚ :lprevious<CR> " opt-k
nnoremap ∆ :lnext<CR> " opt-j
" }}}2
" }}}1


" MISC ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
" {{{
command! -nargs=0 Einit tabedit $MYVIMRC
command! -nargs=0 Cp silent w !pbcopy
command! -nargs=0 ShowColors :source $VIMRUNTIME/syntax/hitest.vim
" set working dir to dir in argument if provided
if argc() == 1 && isdirectory(argv(0)) | cd `=argv(0)` | endif
" }}}
